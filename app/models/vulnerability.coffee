`import DS from 'ember-data'`
`import ENUMS from 'irene/enums'`
`import { translationMacro as t } from 'ember-i18n'`

Vulnerability = DS.Model.extend
  i18n: Ember.inject.service()
  name: DS.attr 'string'
  uuid: DS.attr 'string'
  description: DS.attr 'string'
  question: DS.attr 'string'
  successMessage: DS.attr 'string'
  moreInfo: DS.attr 'string'
  heading: DS.attr 'string'
  intro: DS.attr 'string'
  complaint: DS.attr 'string'
  platform: DS.attr 'number'
  nonComplaint: DS.attr 'string'
  relatedTo: DS.attr 'string'
  businessImplication: DS.attr 'string'
  types: DS.attr()

  tStatic: t("static")
  tDynamic: t("dynamic")
  tManual: t("manual")
  tAPI: t("api")

  tags: (->
    types = @get "types"
    tStatic = @get "tStatic"
    tDynamic = @get "tDynamic"
    tManual = @get "tManual"
    tAPI = @get "tAPI"
    return [] if types is undefined
    tags = []
    for type in types
      if type is ENUMS.VULNERABILITY_TYPE.STATIC
        tags.push tStatic
      if type is ENUMS.VULNERABILITY_TYPE.DYNAMIC
        tags.push tDynamic
      if type is ENUMS.VULNERABILITY_TYPE.MANUAL
        tags.push tManual
      if type is ENUMS.VULNERABILITY_TYPE.API
        tags.push tAPI
    tags
  ).property "types"

`export default Vulnerability`
